// Code generated by mockery v2.16.0. DO NOT EDIT.

package mocks

import (
	mentee "dashboardq-be/features/mentee"

	mock "github.com/stretchr/testify/mock"
)

// MenteeData is an autogenerated mock type for the MenteeData type
type MenteeData struct {
	mock.Mock
}

// AddMentee provides a mock function with given fields: userID, newMentee
func (_m *MenteeData) AddMentee(userID uint, newMentee mentee.Core) (mentee.Core, error) {
	ret := _m.Called(userID, newMentee)

	var r0 mentee.Core
	if rf, ok := ret.Get(0).(func(uint, mentee.Core) mentee.Core); ok {
		r0 = rf(userID, newMentee)
	} else {
		r0 = ret.Get(0).(mentee.Core)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(uint, mentee.Core) error); ok {
		r1 = rf(userID, newMentee)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ShowAll provides a mock function with given fields:
func (_m *MenteeData) ShowAll() ([]mentee.Core, error) {
	ret := _m.Called()

	var r0 []mentee.Core
	if rf, ok := ret.Get(0).(func() []mentee.Core); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]mentee.Core)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewMenteeData interface {
	mock.TestingT
	Cleanup(func())
}

// NewMenteeData creates a new instance of MenteeData. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMenteeData(t mockConstructorTestingTNewMenteeData) *MenteeData {
	mock := &MenteeData{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
